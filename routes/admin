const express=require('express')
const router=express.Router()
const User=require('../models/user')
router.get('/users', async function(req, res) {
    try {
        const users = await User.findAll();
        res.status(200).json(users);
    } catch (error) {
        console.error('Error fetching users:', error);
        res.status(500).json({ message: 'Internal Server Error' });
    }
});
router.post('/users', async function(req, res) {
    try {
        const name = req.body.name;
        const email = req.body.email;
        const phoneNo = req.body.phoneNo;
        const newUser = await User.create({ name: name, email: email, phoneNo: phoneNo });
        res.status(201).json(newUser);
    } catch (error) {
        console.error('Error creating user:', error);
        res.status(500).json({ message: 'Internal Server Error' });
    }
});
router.put('/users/:id', async function(req, res) {
    const userId = req.params.id;
    try {
        const updatedUser = await User.update(req.body, {
            where: { id: userId }
        });
        if (updatedUser[0] === 0) {
            res.status(404).json({ message: 'User not found' });
        } else {
            res.status(200).json({ message: 'User updated successfully' });
        }
    } catch (error) {
        console.error('Error updating user:', error);
        res.status(500).json({ message: 'Internal Server Error' });
    }
});

router.delete('/users/:id', async function(req, res) {
    const userId = req.params.id;
    try {
        const deletedUser = await User.destroy({
            where: { id: userId }
        });
        if (!deletedUser) {
            res.status(404).json({ message: 'User not found' });
        } else {
            res.status(200).json({ message: 'User deleted successfully' });
        }
    } catch (error) {
        console.error('Error deleting user:', error);
        res.status(500).json({ message: 'Internal Server Error' });
    }
});
router.get('/users/:id', async function(req, res) {
    const userId = req.params.id;
    try {
        const user = await User.findByPk(userId);
        if (!user) {
            res.status(404).json({ message: 'User not found' });
        } else {
            res.status(200).json(user);
        }
    } catch (error) {
        console.error('Error fetching user:', error);
        res.status(500).json({ message: 'Internal Server Error' });
    }
});


module.exports=router
